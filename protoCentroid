%Andrew January
%JAN07090690
%BSc Computing - CMP3060 FYP
%Feature extraction function - Centroid Location  

%USEAGE
%centroid = protoCentroid (imageIn) - processes the binary image file
%imageIn, determines and outputs centroid location
%[centroid,ecc] = protoCentroid (imageIn) - processes the binary image file
%imageIn, determines and outputs centroid location and eccentricity value
%dispOut - optional graphical output
%stats - optional statistics output
function [centroid,ecc] = protoCentroid(imageFile, dispOutput, stats)

if nargout == 3
    error('Too many output arguments. Outputs are centroid coords, eccentricity of word, number of components .')
end

if nargin == 3
    stats =true;
    dispOutput =true;
elseif nargin == 2
    dispOutput =true;
    stats =false;
elseif nargin == 1
    dispOutput=false;
    stats =false;
else
    error('Incorrect number of input arguments. Please specify an image file path.')
end

imgin=imread(imageFile);
[word]=preProcess(imgin);
[height, width] = size(word);

%Detects and labels connected components.
[L,num]=bwlabel(word,8);
numObjects=num;
B=bwboundaries(word,'noholes');

rgbcomps=label2rgb(L);

RP = regionprops(L,'Centroid','Eccentricity');

%output graphical display of detected components & centroid location
if dispOutput == true

    subplot(1,3,1),subimage(imgin);hold on;
    title('Original Image');
    set(gca,'xtick',[],'ytick',[]);

    subplot(1,3,2),subimage(rgbcomps);hold on;
    title('Connected Components');
    set(gca,'xtick',[],'ytick',[]);

    subplot(1,3,3),subimage(word);hold on;
    title({'Binary Image', 'With Centroid Location(s)'});

    for objectNum = 1:num
        centroid=RP(objectNum).Centroid;

        plot(centroid(1),centroid(2), 'LineWidth',3,'Marker', 'x', 'MarkerEdgeColor', 'r','MarkerSize', 14);
    end

else

end
%output statistics of detected components & centroid location
if stats == true

    fprintf('\n Centorid location at: %1.0f \r',centroid);
    fprintf('\n Total number of connected components detected: %1.0f \r',numObjects);
else

end

for objectNum = 1:num
    centroid=RP(objectNum).Centroid;
end
ecc=RP.Eccentricity;
end
